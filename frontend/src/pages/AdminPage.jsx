// frontend/src/pages/AdminPage.jsx

import React, { useState, useEffect } from 'react';
// --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
import { 
  addPointsToAll, 
  createMarketItem,
  getAllBanners,
  createBanner,
  updateBanner,
  deleteBanner
} from '../api';
import styles from './AdminPage.module.css';

// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ä–º—ã –±–∞–Ω–Ω–µ—Ä–∞
const initialBannerState = {
  image_url: '',
  link_url: '',
  is_active: true,
  position: 'feed', // 'main' –∏–ª–∏ 'feed'
};

function AdminPanel() {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
  const [addPointsAmount, setAddPointsAmount] = useState(100);
  const [addPointsLoading, setAddPointsLoading] = useState(false);
  const [addPointsMessage, setAddPointsMessage] = useState('');

  // 2. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const [newItem, setNewItem] = useState({
    name: '',
    description: '',
    price: 10,
    stock: 1,
  });
  const [createItemLoading, setCreateItemLoading] = useState(false);
  const [createItemMessage, setCreateItemMessage] = useState('');

  // --- –ù–û–í–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø –î–õ–Ø –ë–ê–ù–ù–ï–†–û–í ---
  const [banners, setBanners] = useState([]);
  const [bannerForm, setBannerForm] = useState(initialBannerState);
  const [editingBannerId, setEditingBannerId] = useState(null); // ID –±–∞–Ω–Ω–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è
  const [bannerLoading, setBannerLoading] = useState(false);
  const [bannerMessage, setBannerMessage] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–∞–Ω–Ω–µ—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  useEffect(() => {
    fetchBanners();
  }, []);

  const fetchBanners = async () => {
    try {
      const response = await getAllBanners();
      setBanners(response.data);
    } catch (error) {
      setBannerMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∞–Ω–Ω–µ—Ä–æ–≤.');
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –±–∞–Ω–Ω–µ—Ä–∞
  const handleBannerFormChange = (e) => {
    const { name, value, type, checked } = e.target;
    setBannerForm(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –±–∞–Ω–Ω–µ—Ä–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
  const handleBannerSubmit = async (e) => {
    e.preventDefault();
    setBannerLoading(true);
    setBannerMessage('');
    try {
      if (editingBannerId) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        await updateBanner(editingBannerId, bannerForm);
        setBannerMessage('–ë–∞–Ω–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        await createBanner(bannerForm);
        setBannerMessage('–ë–∞–Ω–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      }
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      setBannerForm(initialBannerState);
      setEditingBannerId(null);
      fetchBanners();
    } catch (error) {
      setBannerMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
    } finally {
      setBannerLoading(false);
    }
  };

  // –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleEditBanner = (banner) => {
    setEditingBannerId(banner.id);
    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º position –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ---
    setBannerForm({
      image_url: banner.image_url,
      link_url: banner.link_url || '',
      is_active: banner.is_active,
      position: banner.position || 'feed', // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
    });
    window.scrollTo(0, document.body.scrollHeight); 
  };

  // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const cancelEdit = () => {
    setEditingBannerId(null);
    setBannerForm(initialBannerState);
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞
  const handleDeleteBanner = async (bannerId) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –±–∞–Ω–Ω–µ—Ä?')) {
      try {
        await deleteBanner(bannerId);
        setBannerMessage('–ë–∞–Ω–Ω–µ—Ä —É–¥–∞–ª–µ–Ω.');
        fetchBanners(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      } catch (error) {
        setBannerMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏.');
      }
    }
  };
  
  const handleAddPoints = async () => {
    if (!window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å ${addPointsAmount} –±–∞–ª–ª–æ–≤ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º?`)) {
      return;
    }
    setAddPointsLoading(true);
    setAddPointsMessage('');
    try {
      const response = await addPointsToAll({ amount: parseInt(addPointsAmount, 10) });
      setAddPointsMessage(response.data.detail);
    } catch (error) {
      const errorDetails = error.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é';
      const errorStatus = error.response?.status ? ` (–°—Ç–∞—Ç—É—Å: ${error.response.status})` : '';
      setAddPointsMessage(`–û—à–∏–±–∫–∞: ${errorDetails}${errorStatus}`);
    } finally {
      setAddPointsLoading(false);
    }
  };

  // 3. –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  const handleCreateItem = async (e) => {
    e.preventDefault();
    setCreateItemLoading(true);
    setCreateItemMessage('');
    try {
      const itemData = {
        ...newItem,
        price: parseInt(newItem.price, 10),
        stock: parseInt(newItem.stock, 10),
      };
      await createMarketItem(itemData);
      setCreateItemMessage(`–¢–æ–≤–∞—Ä "${newItem.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`);
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setNewItem({ name: '', description: '', price: 10, stock: 1 });
    } catch (error) {
      const errorDetails = error.response?.data?.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é';
      const errorStatus = error.response?.status ? ` (–°—Ç–∞—Ç—É—Å: ${error.response.status})` : '';
      setCreateItemMessage(`–û—à–∏–±–∫–∞: ${errorDetails}${errorStatus}`);
    } finally {
      setCreateItemLoading(false);
    }
  };

  // 4. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleItemChange = (e) => {
    const { name, value } = e.target;
    setNewItem(prev => ({ ...prev, [name]: value }));
  };

  return (
    <div className={styles.page}>
      <h1>‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h1>

      {/* --- –ù–û–í–´–ô –†–ê–ó–î–ï–õ: –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ê–ù–ù–ï–†–ê–ú–ò --- */}
      <div className={styles.card}>
        <h2>{editingBannerId ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–∞–Ω–Ω–µ—Ä'}</h2>
        <form onSubmit={handleBannerSubmit}>
          <input
            type="text"
            name="image_url"
            value={bannerForm.image_url}
            onChange={handleBannerFormChange}
            placeholder="URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞"
            className={styles.input}
            required
          />
          <input
            type="text"
            name="link_url"
            value={bannerForm.link_url}
            onChange={handleBannerFormChange}
            placeholder="URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            className={styles.input}
          />
          <label className={styles.checkboxLabel}>
            <input
              type="checkbox"
              name="is_active"
              checked={bannerForm.is_active}
              onChange={handleBannerFormChange}
            />
            –ê–∫—Ç–∏–≤–µ–Ω (–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
          </label>
          <button type="submit" disabled={bannerLoading} className={styles.buttonGreen}>
            {bannerLoading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : (editingBannerId ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–°–æ–∑–¥–∞—Ç—å –±–∞–Ω–Ω–µ—Ä')}
          </button>
          {editingBannerId && (
            <button type="button" onClick={cancelEdit} className={styles.buttonGrey}>
              –û—Ç–º–µ–Ω–∞
            </button>
          )}
          {bannerMessage && <p className={styles.message}>{bannerMessage}</p>}
        </form>
      </div>

      <div className={styles.card}>
        <h2>–°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤</h2>
        <div className={styles.list}>
          {banners.map(banner => (
            <div key={banner.id} className={styles.listItem}>
              <img src={banner.image_url} alt="banner" className={styles.listItemImage} />
              <div className={styles.listItemContent}>
                <p><b>–°—Å—ã–ª–∫–∞:</b> {banner.link_url || '–Ω–µ—Ç'}</p>
                <p><b>–°—Ç–∞—Ç—É—Å:</b> {banner.is_active ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –°–∫—Ä—ã—Ç'}</p>
              </div>
              <div className={styles.listItemActions}>
                <button onClick={() => handleEditBanner(banner)} className={styles.buttonSmall}>‚úèÔ∏è</button>
                <button onClick={() => handleDeleteBanner(banner.id)} className={styles.buttonSmallRed}>üóëÔ∏è</button>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) */}
      <div className={styles.card}>
        <h2>–ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–ª—ã –≤—Å–µ–º</h2>
        <p>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ–±–∞–≤–∏—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –∫–∞–∂–¥–æ–º—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.</p>
        <input
          type="number"
          value={addPointsAmount}
          onChange={(e) => setAddPointsAmount(e.target.value)}
          className={styles.input}
        />
        <button onClick={handleAddPoints} disabled={addPointsLoading} className={styles.button}>
          {addPointsLoading ? '–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ...' : `–ù–∞—á–∏—Å–ª–∏—Ç—å ${addPointsAmount} –±–∞–ª–ª–æ–≤`}
        </button>
        {addPointsMessage && <p className={styles.message}>{addPointsMessage}</p>}
      </div>

      {/* 5. –ù–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ */}
      <div className={styles.card}>
        <h2>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</h2>
        <form onSubmit={handleCreateItem}>
          <input
            type="text"
            name="name"
            value={newItem.name}
            onChange={handleItemChange}
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
            className={styles.input}
            required
          />
          <textarea
            name="description"
            value={newItem.description}
            onChange={handleItemChange}
            placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
            className={styles.textarea}
          />
          <input
            type="number"
            name="price"
            value={newItem.price}
            onChange={handleItemChange}
            placeholder="–¶–µ–Ω–∞ –≤ –±–∞–ª–ª–∞—Ö"
            className={styles.input}
            required
            min="0"
          />
          <input
            type="number"
            name="stock"
            value={newItem.stock}
            onChange={handleItemChange}
            placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ"
            className={styles.input}
            required
            min="0"
          />
          <button type="submit" disabled={createItemLoading} className={styles.buttonGreen}>
            {createItemLoading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä'}
          </button>
          {createItemMessage && <p className={styles.message}>{createItemMessage}</p>}
        </form>
      </div>
    </div>
  );
}

export default AdminPanel;
