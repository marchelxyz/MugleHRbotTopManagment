// frontend/src/pages/admin/stats/UserEngagementPage.jsx

import React, { useState, useEffect } from 'react';
import { getUserEngagementStats, exportUserEngagement } from '../../../api'; // <-- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
import styles from './UserEngagementPage.module.css';
import UserAvatar from '../../../components/UserAvatar';
import { FaDownload } from 'react-icons/fa'; // <-- –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏

const UserEngagementPage = () => {
    const [stats, setStats] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [isExporting, setIsExporting] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏

    useEffect(() => {
        // ... (—ç—Ç–æ—Ç –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        const fetchData = async () => {
            try {
                setLoading(true);
                const response = await getUserEngagementStats();
                setStats(response.data);
            } catch (err) {
                setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ª–∏–¥–µ—Ä–∞—Ö.');
                console.error(err);
            } finally {
                setLoading(false);
            }
        };
        fetchData();
    }, []);
    
    // --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –°–ö–ê–ß–ò–í–ê–ù–ò–Ø ---
    const handleExport = async () => {
        setIsExporting(true);
        try {
            const response = await exportUserEngagement();
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
            const url = window.URL.createObjectURL(new Blob([response.data]));
            const link = document.createElement('a');
            link.href = url;
            link.setAttribute('download', 'leaders_report.xlsx'); // –ò–º—è —Ñ–∞–π–ª–∞
            document.body.appendChild(link);
            link.click();
            link.parentNode.removeChild(link); // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ:', err);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç.');
        } finally {
            setIsExporting(false);
        }
    };

    if (loading) { /* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */ }
    if (error) { /* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */ }

    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–ø–∏—Å–∫–∞ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    const LeaderList = ({ title, users }) => ( /* ... */ );

    return (
        <div>
            <div className={styles.header}>
                <h2>–õ–∏–¥–µ—Ä—ã –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏</h2>
                {/* --- –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê –°–ö–ê–ß–ò–í–ê–ù–ò–Ø --- */}
                <button 
                    className={styles.exportButton} 
                    onClick={handleExport} 
                    disabled={isExporting}
                >
                    <FaDownload />
                    {isExporting ? '–≠–∫—Å–ø–æ—Ä—Ç...' : '–°–∫–∞—á–∞—Ç—å'}
                </button>
            </div>
            <div className={styles.container}>
                <LeaderList title="üèÜ –¢–æ–ø-5 –î–æ–Ω–∞—Ç–æ—Ä–æ–≤" users={stats?.top_senders} />
                <LeaderList title="üåü –¢–æ–ø-5 –ò–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤" users={stats?.top_receivers} />
            </div>
        </div>
    );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–æ —è –¥–æ–±–∞–≤–ª—é –µ–≥–æ —Å—é–¥–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã
const LeaderList = ({ title, users }) => (
    <div className={styles.listContainer}>
        <h3>{title}</h3>
        <ul className={styles.list}>
            {users && users.length > 0 ? (
                users.map(({ user, count }) => (
                    <li key={user.id} className={styles.listItem}>
                        <div className={styles.avatarContainer}>
                            <UserAvatar user={user} size="small" />
                        </div>
                        <div className={styles.userInfo}>
                            <div className={styles.userName}>{`${user.first_name} ${user.last_name}`}</div>
                            <div className={styles.userPosition}>{user.position}</div>
                        </div>
                        <div className={styles.count}>{count}</div>
                    </li>
                ))
            ) : (
                <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
            )}
        </ul>
    </div>
);


export default UserEngagementPage;
