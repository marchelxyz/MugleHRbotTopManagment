# backend/bot.py
import httpx
from database import settings
import json # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç json

# URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ API Telegram
TELEGRAM_API_URL = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/"

SEND_MESSAGE_URL = f"{TELEGRAM_API_URL}sendMessage"
ANSWER_CALLBACK_URL = f"{TELEGRAM_API_URL}answerCallbackQuery"

# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –§—É–Ω–∫—Ü–∏—è —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏ ID —Ç–µ–º—ã ---
async def send_telegram_message(chat_id: int, text: str, reply_markup: dict = None, message_thread_id: int = None):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç Telegram.
    –ú–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å inline-–∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —Ç–µ–º—É.
    """
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'Markdown'
    }
    if reply_markup:
        payload['reply_markup'] = json.dumps(reply_markup)
    
    if message_thread_id:
        payload['message_thread_id'] = message_thread_id
    
    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(SEND_MESSAGE_URL, json=payload)
            response.raise_for_status()
            print(f"Successfully sent message to chat_id: {chat_id}")
        except httpx.HTTPStatusError as e:
            print(f"Error sending message to {chat_id}: {e.response.json()}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")

# --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô: –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é ---
async def answer_callback_query(callback_query_id: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ inline-–∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å '—á–∞—Å–∏–∫–∏'."""
    payload = {'callback_query_id': callback_query_id}
    async with httpx.AsyncClient() as client:
        try:
            await client.post(ANSWER_CALLBACK_URL, json=payload)
        except Exception as e:
            print(f"Could not answer callback query. Error: {e}")
# --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

# --- –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–û–í–ú–ï–°–¢–ù–´–• –ü–û–î–ê–†–ö–û–í ---
async def send_shared_gift_invitation(invited_user_telegram_id: int, buyer_name: str, item_name: str, invitation_id: int):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫"""
    text = (
        f"üéÅ *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫!*\n\n"
        f"üë§ *{buyer_name}* –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ç–æ–≤–∞—Ä *{item_name}*\n\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ 50/50\n"
        f"‚è∞ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞"
    )
    
    reply_markup = {
        "inline_keyboard": [
            [
                {
                    "text": "‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
                    "callback_data": f"accept_shared_gift_{invitation_id}"
                },
                {
                    "text": "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", 
                    "callback_data": f"reject_shared_gift_{invitation_id}"
                }
            ]
        ]
    }
    
    await send_telegram_message(invited_user_telegram_id, text, reply_markup)

async def send_shared_gift_accepted_notification(buyer_telegram_id: int, invited_user_name: str, item_name: str):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
    text = (
        f"‚úÖ *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!*\n\n"
        f"üë§ *{invited_user_name}* —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Ç–æ–≤–∞—Ä *{item_name}*\n\n"
        f"üí∞ –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –ø–æ–ª–æ–≤–∏–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞"
    )
    
    await send_telegram_message(buyer_telegram_id, text)

async def send_shared_gift_rejected_notification(buyer_telegram_id: int, invited_user_name: str, item_name: str):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
    text = (
        f"‚ùå *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ*\n\n"
        f"üë§ *{invited_user_name}* –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Ç–æ–≤–∞—Ä *{item_name}*\n\n"
        f"üí∞ –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞"
    )
    
    await send_telegram_message(buyer_telegram_id, text)

async def send_shared_gift_expired_notification(buyer_telegram_id: int, item_name: str):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
    text = (
        f"‚è∞ *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏—Å—Ç–µ–∫–ª–æ*\n\n"
        f"–í—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ —Ç–æ–≤–∞—Ä *{item_name}* –∏—Å—Ç–µ–∫–ª–æ\n\n"
        f"üí∞ –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞"
    )
    
    await send_telegram_message(buyer_telegram_id, text)
